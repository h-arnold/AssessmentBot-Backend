// See https://containers.dev/ for full reference
{
  "name": "AssessmentBot-Backend DevContainer",
  // Use the typescript-node base image (Node.js + TypeScript tooling).
  // Keep the Ubuntu variant behavior from the original image where applicable.
  "image": "mcr.microsoft.com/devcontainers/typescript-node:22-bookworm",
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    // Ensure the `file` (libmagic) utility is available for tests and runtime tools that rely on it
    "ghcr.io/devcontainers/features/node:1": {
      "version": "22"
    }
  },
  // Install Gemini CLI globally when the container is created.
  "postCreateCommand": "npm install -g @google/gemini-cli",
  // Install dependencies and build the project every time the container starts.
  "postStartCommand": "npm install && npm run build",
  "customizations": {
    "vscode": {
      "settings": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "always"
        },
        "eslint.enable": true,
        "typescript.tsdk": "node_modules/typescript/lib"
      },
      "extensions": [
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-azuretools.vscode-docker",
        "ms-vscode.vscode-typescript-next",
        "nestjs.nestjs-files",
        "Orta.vscode-jest",
        "streetsidesoftware.code-spell-checker",
        "mermaidchart.vscode-mermaid-chart",
        "GitHub.vscode-pull-request-github",
        "GitHub.copilot-chat",
        "google.geminicodeassist",
        "SonarSource.sonarlint-vscode"
      ]
    }
  }
}
